# -*- coding: utf-8 -*-
"""matching fulldata.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1s57yh2Gd17PVOh6V1cj0JE8rqikWPSjT
"""

!pip install recordlinkage
import recordlinkage
import pandas as pd

df_a =  pd.read_csv(r"clean_full.csv", index_col='product_num')

dupe_indexer = recordlinkage.Index()
dupe_indexer.sortedneighbourhood(left_on='product_category')

df_a.reset_index(col_level=1, drop=True, inplace=True)

dupe_candidate_links = dupe_indexer.index(df_a)

compare_dupes = recordlinkage.Compare()

compare_dupes.string('product_name', 'product_name',
                method = 'cosine',
                threshold = 0.9,
                label='product_name')

compare_dupes.string('product_category', 'product_category',
                method = 'qgram',
                threshold = 0.99,
                label='product_category')

compare_dupes.string('product_ram','product_ram',
                method='levenshtein',
                threshold=0.95,
                label='product_ram')

compare_dupes.string('product_color',
            'product_color',
            method='levenshtein',
            threshold=0.3,
            label='product_color')

dupe_features = compare_dupes.compute(dupe_candidate_links, df_a)

dupe_features.sum(axis=1).value_counts().sort_index(ascending=False)

potential_dupes = dupe_features[dupe_features.sum(axis=1) > 3].reset_index()
potential_dupes['Score'] = potential_dupes.loc[:,  'product_name':'product_category'].sum(axis=1)

potential_dupes

df_a.loc[1978, :]

df_a.loc[1586, :]

df_a.loc[1884, :]

import pandas as pd
pd.DataFrame.from_records(potential_dupes)

from google.colab import files
potential_dupes.to_csv('output3.csv', encoding = 'utf-8-sig')
files.download('output3.csv')

df_a.loc[1978, :]

df_a.loc[874, :]